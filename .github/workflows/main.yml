# ファイル：.github/workflows/glitch-corrupt-h264.yml
name: Glitch via H264 Stream Corruption

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: 'グリッチをかけたいニコニコ動画のURL'
        required: true
      passes:
        description: '何ヵ所破壊するか（デフォルト3）'
        required: false
        default: '3'
      chunk_size:
        description: '一度に破壊するバイト数（デフォルト5000）'
        required: false
        default: '5000'

jobs:
  corrupt-h264:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg python3-pip
          pip3 install yt-dlp

      - name: Download video from NicoNico
        run: |
          yt-dlp "${{ github.event.inputs.video_url }}" -o input.mp4

      - name: Extract raw H.264 stream
        run: |
          # Annex-B 形式の .h264 を生成（映像のみ）
          ffmpeg -y -i input.mp4 -c:v copy -bsf:v h264_mp4toannexb -an -f h264 input.h264

      - name: Corrupt raw H.264 at multiple offsets
        run: |
          set -eux
          PASSES=${{ github.event.inputs.passes }}
          CHUNK=${{ github.event.inputs.chunk_size }}
          SIZE=$(stat --printf="%s" input.h264)
          echo "Stream size: ${SIZE} bytes"
          for i in $(seq 1 $PASSES); do
            # ファイルの 20% 〜 80% 範囲内でランダムに破壊位置を選択
            OFFSET=$(( (RANDOM % (SIZE*60/100)) + (SIZE*20/100) ))
            echo "Pass $i: corrupting ${CHUNK} bytes at offset ${OFFSET}"
            dd if=/dev/urandom of=input.h264 bs=1 count=$CHUNK seek=$OFFSET conv=notrunc
          done

      - name: Re-mux corrupted H.264 + original audio → output.mp4
        run: |
          ffmpeg -y \
            -f h264 -i input.h264 \
            -i input.mp4 -map 0:v -map 1:a \
            -c:v libx264 -crf 23 -preset veryfast \
            -c:a copy \
            output.mp4

      - name: Commit and push glitched video
        uses: EndBug/add-and-commit@v7
        with:
          author_name: github-actions
          author_email: github-actions@github.com
          message: 'Add glitched video (H264 stream corruption)'
          add: 'output.mp4'
